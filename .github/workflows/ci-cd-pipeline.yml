name: CI/CD Pipeline

on:
  workflow_call:
    inputs:
      image-tag:
        description: 'Docker image tag'
        required: true
        type: string
    secrets:
      WORKFLOW_PRIVATE_KEY:
        required: true

jobs:
  ci-cd-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.WORKFLOW_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Clone secrets repository
        run: |
          git clone git@github.com:Intelligent-Curtain-Wall/.secrets.git
          if [ ! -d ".secrets" ]; then
            echo "Error: .secrets directory not found!"
            exit 1
          fi

      - name: Read secrets and set environment variables
        run: |
          export DOCKER_USERNAME=$(cat .secrets/DOCKER_USERNAME)
          export DOCKER_PASSWORD=$(cat .secrets/DOCKER_PASSWORD)
          export MATPOOL_SSH_PORT=$(cat .secrets/MATPOOL_SSH_PORT)
          export MATPOOL_SSH_HOST=$(cat .secrets/MATPOOL_SSH_HOST)
          export MATPOOL_SSH_USERNAME=$(cat .secrets/MATPOOL_SSH_USERNAME)
          echo "DOCKER_USERNAME=$DOCKER_USERNAME" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=$DOCKER_PASSWORD" >> $GITHUB_ENV
          echo "MATPOOL_SSH_PORT=$MATPOOL_SSH_PORT" >> $GITHUB_ENV
          echo "MATPOOL_SSH_HOST=$MATPOOL_SSH_HOST" >> $GITHUB_ENV
          echo "MATPOOL_SSH_USERNAME=$MATPOOL_SSH_USERNAME" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: docker.io/minmuslin/intelligent-curtain-wall:${{ inputs.image-tag }}

      - name: Connect to remote server and execute deployment script
        run: |
          mv .secrets/MATPOOL_SSH_PRIVATE_KEY ~/.ssh/matpool_id_rsa
          chmod 600 ~/.ssh/matpool_id_rsa
          ssh -i ~/.ssh/matpool_id_rsa -p ${{ env.MATPOOL_SSH_PORT }} -o StrictHostKeyChecking=no ${{ env.MATPOOL_SSH_USERNAME }}@${{ env.MATPOOL_SSH_HOST }} "cd /home/mat/Intelligent_Curtain_Wall && ./automated-deployment.sh"
          if [ $? -eq 255 ]; then
            echo "SSH connection timed out and was automatically disconnected, but the deployment script is still running in the background. You can check the deployment logs here: http://110.42.214.164:9000/deployment-logs"
            echo "SSH 连接时间过长，现已自动断开，但部署脚本仍在后台运行，您可以在此处查看部署日志：http://110.42.214.164:9000/deployment-logs"
            exit 0
          fi
